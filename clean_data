-----Author: Joseph P Garcia--------------------------------------------------
----July 7, 2023--------------------------------------------------------------
----Ver. 01-------------------------------------------------------------------

-- The code below combines all tables

CREATE TABLE `keen-airlock-388921.Cylistics.Q1_trips` AS 
SELECT *

FROM (
SELECT * FROM `keen-airlock-388921.Cylistics.apr_trip`
UNION ALL
SELECT * FROM `keen-airlock-388921.Cylistics.feb_trips`
UNION ALL
SELECT * FROM `keen-airlock-388921.Cylistics.march_trip`
UNION ALL
SELECT * FROM `keen-airlock-388921.Cylistics.jan_trips`
  
);

--checks length of ride_ids
SELECT length(ride_id) 

FROM `keen-airlock-388921.Cylistics.Q1_trips` 
-- checks null ride_ids
select count(*) - count(ride_id) from `keen-airlock-388921.Cylistics.Q1_trips`

--checks total rows (1066014)
select count(*) from `keen-airlock-388921.Cylistics.Q1_trips`

-- checks if ride_ids have any duplicates (returns 1066014 values which means no duplicate ride_ids)
select count(distinct (ride_id)) from `keen-airlock-388921.Cylistics.Q1_trips`


--check nulls

SELECT 
  COUNT(*) - COUNT(ride_id) AS ride_id_count,
  COUNT(*) - COUNT(rideable_type) AS rideable_type_count,
  COUNT(*) - COUNT(started_at) AS started_at_count,
  COUNT(*) - COUNT(ended_at) AS ended_at_count,
  COUNT(*) - COUNT(start_lat) AS start_lat_count,
  COUNT(*) - COUNT(start_lng) AS start_lng_count,
  COUNT(*) - COUNT(end_lat) AS end_lat_count, --861 null values
  COUNT(*) - COUNT(start_station_name) AS start_station_name_count, -- 151918 null values
  COUNT(*) - COUNT(start_station_id) AS start_station_id_count, -- 152050 null values
  COUNT(*) - COUNT(end_station_name) AS end_station_name_count, -- 161646 null values
  COUNT(*) - COUNT(end_station_id) AS end_station_id_count, -- 161787 null values
  COUNT(*) - COUNT(member_casual) AS member_casual_count,
  COUNT(*) - COUNT(end_lng) AS end_lng_count -- 861 null values

FROM
`keen-airlock-388921.Cylistics.Q1_trips`


-- removes nulls
-- due to limitations in BigQuery, I cannot use the DELETE FROM function. Instead, I will be selecting the tables and creating a new table called Q1_trips_valid to bypass the paywall

SELECT * 

FROM `keen-airlock-388921.Cylistics.Q1_trips`

WHERE 

start_station_name IS NOT NULL AND
end_station_name IS NOT NULL AND
end_station_id IS NOT NULL AND
end_lng IS NOT NULL AND
start_station_id IS NOT NULL;


-- checks how many stations there are (50 stations)
SELECT DISTINCT end_station_name AS end_station

FROM `keen-airlock-388921.Cylistics.Q1_trips_valid`

-- confirms the station count (50 stations still)
SELECT DISTINCT start_station_name AS start_station

FROM `keen-airlock-388921.Cylistics.Q1_trips_valid`

-- confirms that member type is only 2 values which are 

SELECT DISTINCT member_casual AS member_Type

FROM `keen-airlock-388921.Cylistics.Q1_trips_valid`

------------------------------------------------------------------------------
------------------------------------------------------------------------------
------------------------------------------------------------------------------
------------------------------------------------------------------------------
-----------------------Final cleaning of data---------------------------------
------------------------------------------------------------------------------
------------------------------------------------------------------------------
------------------------------------------------------------------------------


SELECT --the results are saved to another table Q1_trips_valid_cleaned
  ride_id,rideable_type,start_station_name, end_station_name, start_lat, start_lng,end_lat, end_lng, member_casual AS member_type,
  CASE -- this case assigns string values to the day of week
    WHEN EXTRACT (DAYOFWEEK FROM started_at) = 1 THEN 'SUN'
    WHEN EXTRACT (DAYOFWEEK FROM started_at) = 2 THEN 'MON'
    WHEN EXTRACT (DAYOFWEEK FROM started_at) = 3 THEN 'TUE'
    WHEN EXTRACT (DAYOFWEEK FROM started_at) = 4 THEN 'WED'
    WHEN EXTRACT (DAYOFWEEK FROM started_at) = 5 THEN 'THU'
    WHEN EXTRACT (DAYOFWEEK FROM started_at) = 6 THEN 'FRI'
  ELSE 'SAT'
  END AS day_of_week,

  CASE -- this case assigns string values to the month
    WHEN EXTRACT (MONTH FROM started_at) = 1 THEN 'JAN'
    WHEN EXTRACT (MONTH FROM started_at) = 2 THEN 'FEB'
    WHEN EXTRACT (MONTH FROM started_at) = 3 THEN 'MAR'
    WHEN EXTRACT (MONTH FROM started_at) = 4 THEN 'APR'
  ELSE 'UNKOWN'
  END AS month,
  EXTRACT (DAY FROM started_at) AS day,
  EXTRACT (YEAR FROM started_at) AS year,
  TIMESTAMP_DIFF (ended_at, started_at, minute) AS ride_length_m


FROM `keen-airlock-388921.Cylistics.Q1_trips_valid`

WHERE TIMESTAMP_DIFF (ended_at, started_at, minute) > 1 AND TIMESTAMP_DIFF (ended_at, started_at, hour) < 24 -- I only want to record rides above a minute and less than a day

--
